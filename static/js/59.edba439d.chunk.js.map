{"version":3,"file":"static/js/59.edba439d.chunk.js","mappings":"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","sources":["components/updateContactForm/updateContactForm.styled.js","components/updateContactForm/updateContactForm.jsx","components/contactsList/contactList.styled.js","components/avatar/avatar.jsx","components/contactItem/contactItem.styled.js","components/contactItem/contactItem.jsx","components/contactsList/contactsList.jsx","pages/contacts/contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const OpenModalBtn = styled.button`\n  background-color: #f5f5f5;\n  border: none;\n`;\n\nexport const Input = styled.input`\n  width: 334px;\n  height: 24px;\n  display: block;\n  margin-left: 10px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: 0.2px;\n  outline: none;\n\n  border-left-style: none;\n  border-top-style: none;\n  border-right-style: none;\n  border-bottom-color: #202124;\n\n  &:focus {\n    border-bottom-color: #0088cc;\n  }\n`;\n\nexport const PhoneWrap = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  color: #0088cc;\n  background-color: #ffffff;\n\n  border: none;\n`;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import { createPortal } from 'react-dom';\n\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nimport { IoIosClose } from 'react-icons/io';\nimport { IoMdContact } from 'react-icons/io';\nimport { MdOutlineLocalPhone } from 'react-icons/md';\nimport { FaRegUser } from 'react-icons/fa';\nimport { MdOutlineEdit } from 'react-icons/md';\n\nimport SaveButton from 'components/saveButton/saveButton';\n\nimport {\n  Form,\n  OpenModalBtn,\n  Input,\n  PhoneWrap,\n  CloseBtn,\n} from './updateContactForm.styled';\n\nimport { useUpdateContactByIdMutation } from 'redux/contactsApiSlice/contactsApiSlice';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  height: 400,\n  bgcolor: '#FFFFFF',\n  // border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst avatarStyle = {\n  fill: '#8C8C8C',\n  display: 'block',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n};\n\nconst BtnStyle = {\n  bgcolor: '#FFFFFF',\n};\n\n// const modalRoot = document.querySelector('#modal-root');\n\nconst UpdateContactForm = ({ contactId }) => {\n  const contacts = useSelector(state => state.contacts.items);\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [open, setOpen] = useState(false);\n  const [updateContact] = useUpdateContactByIdMutation();\n\n  const contact = contacts\n    ? contacts.find(contact => contact.id === contactId)\n    : {};\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value.toLowerCase());\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n    navigate(`/contacts/${contactId}`);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    navigate('/contacts');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await updateContact({ name, number });\n      setOpen(false);\n      navigate('/contacts');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {contacts && (\n        <>\n          <OpenModalBtn onClick={handleOpen} sx={BtnStyle}>\n            <MdOutlineEdit size={25} />\n          </OpenModalBtn>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n            <Box sx={style}>\n              <CloseBtn onClick={handleClose}>\n                <IoIosClose size=\"26\" />\n              </CloseBtn>\n              <Form onSubmit={handleSubmit}>\n                <IoMdContact size=\"200\" style={avatarStyle} />\n                <PhoneWrap>\n                  <FaRegUser size=\"20\" />\n                  <label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                      required\n                      value={contact.name}\n                      onChange={handleChange}\n                      placeholder=\"Name\"\n                    />\n                  </label>\n                </PhoneWrap>\n\n                <PhoneWrap>\n                  <MdOutlineLocalPhone size=\"20\" />\n                  <label>\n                    <Input\n                      type=\"tel\"\n                      name=\"number\"\n                      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                      required\n                      value={contact.number}\n                      onChange={handleChange}\n                      placeholder=\"Number\"\n                    />\n                  </label>\n                </PhoneWrap>\n                <SaveButton title=\"Save\" />\n              </Form>\n            </Box>\n          </Modal>\n          {/* modalRoot */}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UpdateContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nexport const ButtonDelete = styled.button`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-left: 20px;\n  border: none;\n  border-radius: 4px;\n  background-color: rgb(113, 113, 238);\n  color: #fff;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: blue;\n  }\n`;\n","import Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n      position: 'static',\n      // width: 250,\n      // height: 250,\n      // fontSize: 35,\n      // marginTop: 1,\n      marginLeft: 2,\n    },\n    // children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    // children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nexport default function BackgroundLetterAvatars({ name }) {\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Avatar {...stringAvatar(`${name}`)} />\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ItemWrap = styled.div`\n  display: flex;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  width: 100%;\n  height: 56px;\n\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  align-items: center;\n\n  display: flex;\n  width: 100%;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  line-height: 20px;\n  letter-spacing: 0.2px;\n  color: black;\n  cursor: pointer;\n`;\n\nexport const Name = styled.p`\n  text-align: start;\n  width: 200px;\n  margin-left: 16px;\n`;\n\nexport const Phone = styled.p`\n  text-align: start;\n  width: 600px;\n  margin-left: 300px;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-right: 10px;\n  border: none;\n  background-color: #f5f5f5;\n`;\n","import { useSelector } from 'react-redux';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport BackgroundLetterAvatars from '../avatar/avatar';\n\nimport { useDeleteContactMutation } from '../../redux/contactsApiSlice/contactsApiSlice';\n\nimport UpdateContactForm from 'components/updateContactForm/updateContactForm';\n\nimport {\n  ItemWrap,\n  Item,\n  Phone,\n  ItemLink,\n  Name,\n  DeleteBtn,\n} from './contactItem.styled';\n\nconst ContactItem = () => {\n  const contacts = useSelector(state => state.contacts.items);\n\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(state => state.filter.value);\n\n  const normalizeFilter = filter.trim().toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  return visibleContacts.map(({ name, id, number }) => {\n    return (\n      <ItemWrap key={id}>\n        <Item key={id}>\n          <ItemLink to={`/contacts/${id}/personInfo`}>\n            <BackgroundLetterAvatars name={name} />\n\n            <Name>{name}</Name>\n\n            <Phone>{number}</Phone>\n          </ItemLink>\n\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => {\n              deleteContact(id);\n              Notify.success(`Сontact deleted`);\n            }}\n          >\n            <RiDeleteBin6Line size={25} />\n          </DeleteBtn>\n\n          <UpdateContactForm contactId={id} />\n        </Item>\n      </ItemWrap>\n    );\n  });\n};\n\nexport default ContactItem;\n","import { List } from './contactList.styled';\nimport ContactItem from 'components/contactItem/contactItem';\nimport Spinner from '../spinner/spinner';\n\nimport { useGetContactsQuery } from '../../redux/contactsApiSlice/contactsApiSlice';\n\nconst ContactsList = () => {\n  const { data, isFetching } = useGetContactsQuery();\n\n  return (\n    <>\n      {isFetching && <Spinner />}\n      {data && (\n        <List>\n          <ContactItem />\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import ContactsList from 'components/contactsList/contactsList';\nimport { useGetContactsQuery } from 'redux/contactsApiSlice/contactsApiSlice';\n\nconst Contacts = () => {\n  useGetContactsQuery();\n\n  return (\n    <>\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","OpenModalBtn","Input","PhoneWrap","CloseBtn","style","position","top","left","transform","width","height","bgcolor","boxShadow","p","avatarStyle","fill","display","marginLeft","marginRight","BtnStyle","contactId","contacts","useSelector","state","items","navigate","useNavigate","useState","name","setName","number","setNumber","open","setOpen","useUpdateContactByIdMutation","updateContact","contact","find","id","handleChange","e","target","value","toLowerCase","handleClose","handleSubmit","preventDefault","console","log","onClick","sx","size","Modal","onClose","Box","onSubmit","type","pattern","title","required","onChange","placeholder","List","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","stringAvatar","BackgroundLetterAvatars","Stack","direction","spacing","Avatar","ItemWrap","Item","ItemLink","Link","Name","Phone","DeleteBtn","useDeleteContactMutation","deleteContact","normalizeFilter","filter","trim","includes","map","to","Notify","useGetContactsQuery","data","isFetching"],"sourceRoot":""}